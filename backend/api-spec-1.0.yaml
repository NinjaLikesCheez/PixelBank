openapi: '3.0.2'
info:
  title: PixelBank API
  version: '1.0'
servers:
  - url: https://localhost:8080
tags:
  - name: User
    description: Interact with Users of the Bank
  - name: Admin
    description: Administrate the bank
  - name: Utilities
    description: Utilities for checking liveness, uptime, etc
paths:
  /ping:
    get:
      summary: Check if PixelBank is responding
      description: Returns status code 200, provided PixelBank is up and responding to requests
      tags: 
        - Utilities
      responses:
        '200':
          description: OK
  /user/{userID}:
    get:
      summary: Fetches user details
      description: Returns the details of a User
      tags: 
        - User
      parameters:
        - name: userID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: No User found
    put:
      summary: Update a user
      description: Updates the details of a User
      tags:
        - User
      requestBody:
        description: Update a User
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid user Identifier
        '404':
          description: User not found
  /users:
    get:
      summary: List all users
      description: Returns a list of all users


    # put: // update user
    # post: // create new user? OR /register
    # content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/Pet'
    #         application/xml:
    #           schema:
    #             $ref: '#/components/schemas/Pet'
  /users:
    get:
      tags: 
        - User
      responses:
        '200':
          description: List all users in the bank
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: Identifier of user
          example: testuser123
        balance:
          type: number
          format: int64
          description: User's current balance, in cents
          example: 1337
        role:
          type: string
          enum:
            - member
            - guest
            - friend
          description: User's current role
          example: member
    UserUpdate:
      type: object
      properties:
        id:
          type: string
          description: Identifier of user
          example: testuser123
        balance:
          type: number
          format: int64
          description: User's current balance, in cents
          example: 1337
        role:
          type: string
          enum:
            - member
            - guest
            - friend
          description: User's current role
          example: member


